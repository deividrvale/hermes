Signature: [
  zero : vd ;
  cons : vd -> be -> be ;
  del : vd -> be -> be ;
  eq : vd -> vd -> dd ;
  false : dd ;
  if : dd -> vd -> vd -> be -> be ;
  last : be -> vd ;
  nil : be ;
  reverse : be -> be ;
  s : vd -> vd ;
  true : dd
]

Vars: [
  X : vd;
  Y : vd;
  Z : be
]

Rules: [
  last nil => zero ;
  last (cons X nil) => X ;
  last (cons X (cons Y Z)) => last (cons Y Z) ;
  del X nil => nil ;
  del X (cons Y Z) => if (eq X Y) X Y Z ;
  if true X Y Z => Z ;
  if false X Y Z => cons Y (del X Z) ;
  eq zero zero => true ;
  eq zero (s Y) => false ;
  eq (s X) zero => false ;
  eq (s X) (s Y) => eq X Y ;
  reverse nil => nil ;
  reverse (cons X Z) => cons (last (cons X Z)) (reverse (del (last (cons X Z)) (cons X Z)))
]

