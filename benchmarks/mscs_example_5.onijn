Signature: [
    zero : nat;
    suc : nat -> nat;
    nil : list;
    cons : nat -> list -> list;
    add : nat -> nat -> nat;
    append : list -> list -> list;
    rev : list -> list;
    sum : list -> nat
]

Vars: [
    x : nat;
    y : nat;
    q : list;
    l : list
]

Rules: [
    append nil l => l;
    append (cons x q) l => cons x (append q l);
    rev nil => nil;
    rev (cons x q) => append (rev q) (cons x nil);
    add x zero => x;
    add x (suc y) => suc (add x y);
    append nil l => l;
    append (cons x q) l => cons x (append q l);
    sum nil => zero;
    sum (cons x q) => add (sum q) x
]
